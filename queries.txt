
2.1
db.albums.count()

2.2
db.albums.explain("executionStats").aggregate([ {
        $group: {
            _id: null,
            total: { $sum: "$price" }
        }
	}
])

2.3
db.albums.aggregate([
    { $sort : { price : -1, name : 1 } }
], {
  allowDiskUse:true,
  cursor:{}
})

2.4
db.albums.aggregate([
    { $group: { _id: '$name' } },
    { $sort: { _id: 1} },
    { $limit: 3}
])

2.5
db.albums.aggregate([
    { 
        $group: 
        { 
            _id: null,
            minPrice: { $min: "$price" },
            maxPrice: { $max: "$price" },
            average: { $avg : "$price" }
        }
    }
])

2.6
db.albums.aggregate([
    { $match : { price : { $gt : 97.551 } } },
    { $group : { _id : null, nrOfDocuments : { $sum : 1 } } },
])


2.7
db.albums.explain("executionStats").aggregate([
    { 
        $group : {
            _id : "$category",
            nrOfDocuments : { $sum : 1}
        } 
    }
])
10041 ms

2.8
db.albums.explain("executionStats").aggregate([
    { $match : { category : "CD" } },
    { 
        $group : {
            _id : "$name",
            highestPrice: { $max : "$price" }
        },
    }
])
10200 ms

2.9
before : 15400 ms
insert : { name : 1 }
after : 10 ms
db.albums.explain("executionStats").aggregate([
    { $sort : { name : 1 }},
    { $skip : 20 },
    { $limit : 1 }
])

2.10
db.albums.aggregate([
    { $match : { category : "Vinyl"} },
    { $group : { _id : "$category", total : { $sum : "$price" } } }
])

---------------------------------------------------------------------

3.3 a. Vad förväntar ni er ska hända med tidsåtgången?

3.3 b. Vad hände egentligen, blev det någon skillnad?

3.3 c. Vilka index gjorde störst skillnad?

3.4 d. Provade ni några index som inte gjorde någon skillnad? Kan ni förklara varför?

---------------------------------------------------------------------